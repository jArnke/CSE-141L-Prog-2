0 0000 0001  CLR ACC  //SETUP
0 0000 0010  CLR MEM
0 0000 1110  STR ACC [MEM]  //STR X
0 0011 1000  ADM 1
0 0000 0001
0 0000 1110  STR ACC [MEM]  //STR LT -> [LT] == 1 : LT == 0
0 0011 1000  ADM 1
0 0000 0001
0 0001 1000  ADD TAP1
0 0110 0000
0 0000 1110  STR ACC [MEM]
0 0011 1000  ADM 1
0 0000 0001
0 0000 0001  CLR ACC
0 0001 1000  ADD TAP2
0 0100 1000
0 0000 1110  STR ACC [MEM]
0 0011 1000  ADM 1
0 0000 0001
0 0000 0001  CLR ACC
0 0001 1000  ADD TAP3
0 0111 1000
0 0000 1110  STR ACC [MEM]
0 0011 1000  ADM 1
0 0000 0001
0 0000 0001  CLR ACC
0 0001 1000  ADD TAP4
0 0111 0010
0 0000 1110  STR ACC [MEM]
0 0011 1000  ADM 1
0 0000 0001
0 0000 0001  CLR ACC
0 0001 1000  ADD TAP5
0 0110 1010
0 0000 1110  STR ACC [MEM]
0 0011 1000  ADM 1
0 0000 0001
0 0000 0001  CLR ACC
0 0001 1000  ADD TAP6
0 0110 1001
0 0000 1110  STR ACC [MEM]
0 0011 1000  ADM 1
0 0000 0001
0 0000 0001  CLR ACC
0 0001 1000  ADD TAP7
0 0101 1100
0 0000 1110  STR ACC [MEM]
0 0011 1000  ADM 1
0 0000 0001
0 0000 0001  CLR ACC
0 0001 1000  ADD TAP8
0 0111 1110
0 0000 1110  STR ACC [MEM]
0 0011 1000  ADM 1
0 0000 0001
0 0000 0001  CLR ACC
0 0001 1000  ADD TAP9
0 0111 1011
0 0000 1110  STR ACC [MEM]
0 0011 1000  ADM 1
0 0000 0001
0 0000 0001  CLR ACC  //TAPSEARCH  
0 0000 0010  CLR MEM
0 0001 0100  ADD [64]
0 0100 0000
0 0111 1000  XOR 0
0 0000 0000
0 0000 0011  LFSR SETSEED
0 0000 0001  CLR ACC
0 0001 0100  ADD [LT]
0 0000 0001
0 0001 1000  ADD 1
0 0000 0001
0 0000 1100  STR [LT]
0 0000 0001
0 0000 0010  CLR MEM
0 0011 0000  ADM
0 0011 1000  ADM LT
0 0000 0001
0 0000 0001  CLR ACC
0 0000 0110  LDR
0 0000 0100  LFSR SETTAP
0 0000 0010  CLR MEM
0 0000 0001  CLR MEM  //reset X
0 0000 1110  STR ACC [MEM]  //STR X
0 0000 0010  WHILE_1 CLR MEM //Load “X” from end of memory, initially 0 "84"
0 0011 0100  ADM [X]
0 0000 0000
0 0011 1000  ADM 1	//Inc X
0 0000 0001
0 0000 0101  LFSR SHIFT   
0 0000 0001  CLR ACC
0 0001 1000  ADD 64
0 0100 0000
0 0001 0000  ADD MEM 
0 0000 1101  STRM X 
0 0000 0000  //[X] == 0
0 0000 0010  CLR MEM
0 0011 0000  ADM
0 0000 0001  CLR ACC
0 0000 0110  LDR
0 0111 1100  XOR LFSR
0 0000 0010  CLR MEM
0 0000 1000  CMP
1 1111 0000  BNEQ TAP_SEARCH  "line 62"
1 1101 0100 -44 * 1 1101 0100
0 0000 0010  CLR MEM
0 0000 0001  CLR ACC
0 0000 0110	 LDR //load X
0 0011 1000  ADM 9
0 0000 1001
0 0000 1000  CMP
1 1100 0000  BLT WHILE_1 "line 86"
1 1110 0100 -28*  
0 0000 0001  CLR ACC
0 0000 0010  CLR MEM
0 0000 1101  STR MEM [I]
0 1111 0000
0 0001 0100  ADD [64]  //assigns Acc to value found at memory[64] = first encrypted character 
0 0100 0000
0 0111 1000  XOR 0
0 0000 0000
0 0000 0011  LFSR SETSEED
0 0000 0001  CLR ACC  //WHILE_2
0 0001 1000  ADD 64
0 0100 0000
0 0001 0000  ADD MEM
0 0000 1101  STR MEM [I] 
0 1111 0000
0 0000 0010  CLR MEM
0 0011 0000  ADM
0 0000 0001  CLR ACC
0 0000 0110  LDR
0 0111 1100  XOR LFSR
0 0000 0101  LFSR SHIFT
0 0000 0010  CLR MEM
0 0011 0100  ADM [I]
0 1111 0000
0 0000 1110  STR ACC [MEM]
0 0011 1000  ADM 1
0 0000 0001 
0 0000 0001  CLR ACC
0 0001 1000  ADD 51
0 1000 0000
0 0000 1000  CMP
1 1010 0000  BGT WHILE_2 "line 124"
1 1110 1001  -23
0 0000 1111  DONE
